<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">
	
	<!-- Turns on annotation processing for @ManagedResouce and the like, however those items MUST still be spring beans to be supported. -->
	<context:mbean-server id="mbeanServer" />
    <context:mbean-export server="mbeanServer" />
		
	<!-- Scans within the base package of the application for @Component (or its specializations) or @Named to configure as beans -->
	<context:component-scan base-package="jmx.example.spring" />
	
	<util:map id="messageWriters">
		<entry key="console" value-ref="console" />
		<entry key="logger" value-ref="logger" />
	</util:map>

	<!-- Now expose the server for remote access via RMI 
	     Local access: service:jmx:rmi://localhost/jndi/rmi://localhost:1099/myconnector
	     Remote access: service:jmx:rmi:///jndi/rmi://your.host:1099/myconnector
	-->
 	<bean class="org.springframework.jmx.support.ConnectorServerFactoryBean" depends-on="rmiRegistry" 
		  p:objectName="connector:name=rmi"
		  p:serviceUrl="service:jmx:rmi://localhost/jndi/rmi://localhost:1099/myconnector" />

	<bean id="rmiRegistry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean"
	      p:port="1099" />

</beans>